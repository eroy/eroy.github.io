#!/bin/bash
 
 clear;
echo -e "Script for managment router TP-link by Sergey Zhuravel\n"

rawurlencode() {
  local string="${1}"
  local strlen=${#string}
  local encoded=""
 
  for (( pos=0 ; pos<strlen ; pos++ )); do
     c=${string:$pos:1}
     case "$c" in
        [-_.~a-zA-Z0-9] ) o="${c}" ;;
        * )               printf -v o '%%%02x' "'$c"
     esac
     encoded+="${o}"
  done
  echo "${encoded}"    # You can either set a return variable (FASTER) 
  REPLY="${encoded}"   #+or echo the result (EASIER)... or both... :p
}


USERNAME="admin";
IP=$1;
PASSWORD=$2;


PASSWORD_MD5=`echo -n $PASSWORD | md5sum | cut -d " " -f 1`;
COOKIE_B64_PART=`echo -n $USERNAME":"$(echo -n $PASSWORD_MD5)|base64`;
COOKIEVAL_UNENCODED=`echo -n "Basic $COOKIE_B64_PART"`;
COOKIEVAL=`rawurlencode "$COOKIEVAL_UNENCODED"`

GET_KEY_URL=`echo "http://$IP/userRpm/LoginRpm.htm?Save=Save"`
RESPONSE=`curl -s --cookie "Authorization=$COOKIEVAL" $GET_KEY_URL`;
KEY=`echo $RESPONSE |  head -n 1 | cut -d '/' -f 4` # extract key from post-login-page

# username and password to router


# generate new passsword
NEW_PASS=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
 
# maximum number of reboot attempts
MAX_TRIES=3; 


# URL for managment
REBOOT_URL="http://"$IP"/"$KEY"/userRpm/SysRebootRpm.htm?Reboot=Reboot";
REBOOT_REFERER_URL="http://"$IP"/"$KEY"/userRpm/SysRebootRpm.htm";

WPS="http://"$IP"/"$KEY"/userRpm/WpsCfgRpm.htm?DisWps=DisWps";
WPS_REFERER="http://"$IP"/"$KEY"/userRpm/WpsCfgRpm.htm";
 

CHANGE_WIFI_PASS_REFERER_URL="http://"$IP"/"$KEY"/userRpm/WlanSecurityRpm.htm";

# constans
REBOOT="r"
CONFIG_WIFI="cw"
CONFIG_WIFI_MANUAL="cwm"

change_wifi()
{
for i in $(seq 1 $MAX_TRIES)
do
 
  CHANGE_WIFI_PASS_URL="http://"$IP"/"$KEY"/userRpm/WlanSecurityRpm.htm?wepSecOpt=3&wpaSecOpt=2&wpaCipher=2&intervalWpa=0&secType=3&pskSecOpt=3&pskCipher=1&interval=0&Save=Save&pskSecret="$NEW_PASS;
 
  
  # REBOOT_RESPONSE=`curl -s --cookie "Authorization=$COOKIEVAL" --referer $REBOOT_REFERER_URL $REBOOT_URL`;
  CHANGE_WIFI_RESPONSE=`curl -s --cookie "Authorization=$COOKIEVAL" --referer $CHANGE_WIFI_PASS_REFERER_URL $CHANGE_WIFI_PASS_URL`;
  sleep 1;
  WPS_RESPONSE=`curl -s --cookie "Authorization=$COOKIEVAL" --referer $WPS_REFERER $WPS`;
 
  MATCHES=`echo $CHANGE_WIFI_RESPONSE | grep -c "reboots, please"`
  if [ $MATCHES -gt 0 ]; then
    # Success!
    break
  else
    echo "Failed on try $i..."
    sleep 1;
  fi
done
 

if [ $MATCHES -gt 0 ]; then
  SUCCESS_TEXT="Successfully edit pass to \e[1m\e[31m$NEW_PASS\e[0m";
  WPS_TEXT=`echo $WPS_RESPONSE | awk {'print $9'} | awk -F"," '{ print $1 }'`
  SSID_TEXT=`echo $WPS_RESPONSE | awk {'print $16'} | awk -F"," '{ print $1 }' | sed 's/\"//g'`
  echo "WPS: "$WPS_TEXT;
  echo "SSID: "$SSID_TEXT
  echo -e $SUCCESS_TEXT;


else
	echo "Unknown error"
 
  exit 1;
fi
}

change_wifi_manual() 
{



for i in $(seq 1 $MAX_TRIES)
do
 
printf 'Enter new passsword on wifi: '
read -s PASS_MANUAL

PASS_MANUAL_LENGTH=`echo -n $PASS_MANUAL | wc -c`

if [ $PASS_MANUAL_LENGTH -gt 7 ]; then
	echo "PASS OK"
else
	echo "Error input password"
	exit 1;

fi

  CHANGE_WIFI_PASS_MANUAL_URL="http://"$IP"/"$KEY"/userRpm/WlanSecurityRpm.htm?wepSecOpt=3&wpaSecOpt=2&wpaCipher=2&intervalWpa=0&secType=3&pskSecOpt=3&pskCipher=1&interval=0&Save=Save&pskSecret="$PASS_MANUAL;
 
  
  # REBOOT_RESPONSE=`curl -s --cookie "Authorization=$COOKIEVAL" --referer $REBOOT_REFERER_URL $REBOOT_URL`;
  CHANGE_WIFI_RESPONSE=`curl -s --cookie "Authorization=$COOKIEVAL" --referer $CHANGE_WIFI_PASS_REFERER_URL $CHANGE_WIFI_PASS_MANUAL_URL`;
  sleep 1;
  WPS_RESPONSE=`curl -s --cookie "Authorization=$COOKIEVAL" --referer $WPS_REFERER $WPS`;
 
  MATCHES=`echo $CHANGE_WIFI_RESPONSE | grep -c "reboots, please"`
  if [ $MATCHES -gt 0 ]; then
    # Success!
    break
  else
    echo "Failed on try $i..."
    sleep 1;
  fi
done
 
sleep 1;
if [ $MATCHES -gt 0 ]; then
  SUCCESS_TEXT="Successfully edit pass to \e[1m\e[31m$PASS_MANUAL\e[0m";
  WPS_TEXT=`echo $WPS_RESPONSE | awk {'print $9'} | awk -F"," '{ print $1 }'`
  SSID_TEXT=`echo $WPS_RESPONSE | awk {'print $16'} | awk -F"," '{ print $1 }' | sed 's/\"//g'`
  echo "WPS: "$WPS_TEXT;
  echo "SSID: "$SSID_TEXT
  echo -e $SUCCESS_TEXT;


else
	echo "Unknown error"
 
  exit 1;
fi


}


reboot_router()
{

	for i in $(seq 1 $MAX_TRIES)
	do
 
	  sleep 1;
 
  
  REBOOT_RESPONSE=`curl -s --cookie "Authorization=$COOKIEVAL" --referer $REBOOT_REFERER_URL $REBOOT_URL`;
   
  MATCHES=`echo $REBOOT_RESPONSE | grep -c "Reboot"`
  if [ $MATCHES -gt 0 ]; then
    # Success!
    break
  else
    echo "Failed on try $i..."
    sleep 1;
  fi
done
 

if [ $MATCHES -gt 0 ]; then
  SUCCESS_TEXT="Successfully reboot $IP";
    echo -e $SUCCESS_TEXT;


else
	echo "Unknown error"
 
  exit 1;
fi
}

 
echo -e "Change config mode: \n 1 - for generate new wifi passsword \n 2 - enter new passsword wifi \n 3 - reboot router \n q - exit"
printf 'What do you want to do? '
read WANT

case "$WANT" in
	1)
	change_wifi
	;;

	2)
	change_wifi_manual
	;;
	
	3)
	reboot_router
	;;

	q)
		exit;
		;;

	*) 
	echo "Error code"
	exit 1;
	;;
esac 





