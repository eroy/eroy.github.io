#!/bin/bash
 
clear;
echo -e "Script for managment router TP-link by Sergey Zhuravel\n"

USERNAME=admin;
IP=$1;
PASSWORD=$2;

NEW_PASS=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
 
MAX_TRIES=3; # maximum number of reboot attempts


# URL for managment
  REBOOT_URL="http://"$IP"/userRpm/SysRebootRpm.htm?Reboot=1";
  REBOOT_REFERER_URL="http://"$IP"/userRpm/SysRebootRpm.htm";
 
  WPS="http://"$IP"/userRpm/WpsCfgRpm.htm?DisWps=DisWps";
  WPS_REFERER="http://"$IP"/userRpm/WpsCfgRpm.htm";
 
  SSID="http://"$IP"/userRpm/WlanNetworkRpm.htm";


  CHANGE_WIFI_PASS_REFERER_URL="http://"$IP"/userRpm/WlanSecurityRpm.htm";

# constans
REBOOT="r"
CONFIG_WIFI="cw"
CONFIG_WIFI_MANUAL="cwm"

change_wifi()
{
# If the reboot sequence fails, try again $MAX_TRIES times
for i in $(seq 1 $MAX_TRIES)
do
  CHANGE_WIFI_PASS_URL="http://"$IP"/userRpm/WlanSecurityRpm.htm?wepSecOpt=3&keytype=1&keynum=1&key1=&length1=0&key2=&length2=0&key3=&length3=0&key4=&length4=0&wpaSecOpt=3&wpaCipher=1&radiusIp=&radiusPort=1812&radiusSecret=&intervalWpa=0&secType=3&pskSecOpt=3&pskCipher=1&pskSecret="$NEW_PASS"&interval=0&Save=Save";

  
  # REBOOT_RESPONSE=`curl -s --user $USERNAME:$PASSWORD --referer $REBOOT_REFERER_URL $REBOOT_URL`;
  WIFI_RESPONSE=`curl -s --user $USERNAME:$PASSWORD --referer $CHANGE_WIFI_PASS_REFERER_URL $CHANGE_WIFI_PASS_URL`;
  sleep 1;
  WPS_RESPONSE=`curl -s --user $USERNAME:$PASSWORD --referer $WPS_REFERER $WPS`;
  sleep 1;
  SSID_RESPONSE=`curl -s --user $USERNAME:$PASSWORD --referer $SSID $SSID`;




 MATCHESS=`echo $WIFI_RESPONSE | grep -c "WlanSecurityRpm"`
  if [ $MATCHESS -gt 0 ]; then
  
  SSID_TEXT=`echo $SSID_RESPONSE | awk {'print $9'} | awk -F"," '{ print $4 }' | sed 's/\"//g'`  
  SUCCESS_TEXT="Successfully edit pass to \e[1m\e[31m$NEW_PASS\e[0m";
  WPS=`echo $WPS_RESPONSE | awk {'print $9'} | awk -F"," '{ print $1 }'`
  echo "WPS: "$WPS;
  echo "SSID: "$SSID_TEXT
  echo -e $SUCCESS_TEXT;


  REBOOT_RESPONSE=`curl -s --user $USERNAME:$PASSWORD --referer $REBOOT_REFERER_URL $REBOOT_URL`;
    # Success!
    MATCHES=`echo $REBOOT_RESPONSE | grep -c "Reboot"`
  if [ $MATCHES -gt 0 ]; then
    SUCCESS_TEXT="Successfully triggered reboot of $IP";
    echo $SUCCESS_TEXT;
    # Success!
    break
  else
    echo "Failed on try $i..."
    sleep 1;
  fi


    break
  else
    echo "Error $i..."
    sleep 1;
  fi

done
 
}

change_wifi_manual()
{


# If the reboot sequence fails, try again $MAX_TRIES times
for i in $(seq 1 $MAX_TRIES)
do

printf 'Enter new passsword on wifi: '
read -s PASS_MANUAL

PASS_MANUAL_LENGTH=`echo -n "$PASS_MANUAL" | wc -c`

if [ $PASS_MANUAL_LENGTH -gt 7 ]; then
  echo "PASS OK"
else
  echo "Error input password"
  exit 1;

fi


  CHANGE_WIFI_PASS_MANUAL_URL="http://"$IP"/userRpm/WlanSecurityRpm.htm?wepSecOpt=3&keytype=1&keynum=1&key1=&length1=0&key2=&length2=0&key3=&length3=0&key4=&length4=0&wpaSecOpt=3&wpaCipher=1&radiusIp=&radiusPort=1812&radiusSecret=&intervalWpa=0&secType=3&pskSecOpt=3&pskCipher=1&pskSecret="$PASS_MANUAL"&interval=0&Save=Save";

  
  # REBOOT_RESPONSE=`curl -s --user $USERNAME:$PASSWORD --referer $REBOOT_REFERER_URL $REBOOT_URL`;
  WIFI_RESPONSE=`curl -s --user $USERNAME:$PASSWORD --referer $CHANGE_WIFI_PASS_REFERER_URL $CHANGE_WIFI_PASS_MANUAL_URL`;
  sleep 1;
  WPS_RESPONSE=`curl -s --user $USERNAME:$PASSWORD --referer $WPS_REFERER $WPS`;
  sleep 1;
  SSID_RESPONSE=`curl -s --user $USERNAME:$PASSWORD --referer $SSID $SSID`;




 MATCHESS=`echo $WIFI_RESPONSE | grep -c "WlanSecurityRpm"`
  if [ $MATCHESS -gt 0 ]; then
  
  SSID_TEXT=`echo $SSID_RESPONSE | awk {'print $9'} | awk -F"," '{ print $4 }' | sed 's/\"//g'`  
  SUCCESS_TEXT="Successfully edit pass to \e[1m\e[31m$PASS_MANUAL\e[0m";
  WPS=`echo $WPS_RESPONSE | awk {'print $9'} | awk -F"," '{ print $1 }'`
  echo "WPS: "$WPS;
  echo "SSID: "$SSID_TEXT
  echo -e $SUCCESS_TEXT;


  REBOOT_RESPONSE=`curl -s --user $USERNAME:$PASSWORD --referer $REBOOT_REFERER_URL $REBOOT_URL`;
    # Success!
    MATCHES=`echo $REBOOT_RESPONSE | grep -c "Reboot"`
  if [ $MATCHES -gt 0 ]; then
    SUCCESS_TEXT="Successfully triggered reboot of $IP";
    echo $SUCCESS_TEXT;
    # Success!
    break
  else
    echo "Failed on try $i..."
    sleep 1;
  fi


    break
  else
    echo "Error $i..."
    sleep 1;
  fi

done


}


reboot_router() 
{
for i in $(seq 1 $MAX_TRIES)
do

  REBOOT_RESPONSE=`curl -s --user $USERNAME:$PASSWORD --referer $REBOOT_REFERER_URL $REBOOT_URL`;
  MATCHES=`echo $REBOOT_RESPONSE | grep -c "Reboot"`
  if [ $MATCHES -gt 0 ]; then
    SUCCESS_TEXT="Successfully triggered reboot of $IP";
    echo $SUCCESS_TEXT;
    # Success!
    break
  else
    echo "Failed on try $i..."
    sleep 1;
  fi

done
}

echo -e "Change config mode: \n 1 - for generate new wifi passsword \n 2 - enter new passsword wifi \n 3 - reboot router \n q - exit"
printf 'What do you want to do? '
read WANT

case "$WANT" in
  1)
  change_wifi
  ;;

  2)
  change_wifi_manual
  ;;
  
  3)
  reboot_router
  ;;

  q)
    exit;
    ;;

  *) 
  echo "Error code"
    exit;
  ;;
esac 